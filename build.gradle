apply plugin: 'idea'
version = 1.0


ext {
    scalaVersion = '2.11.8'
    scalaLibVersion = '2.11'
}

repositories {
    mavenCentral()
}


subprojects {
    apply plugin: 'scala'

    repositories {
        mavenCentral()
    }


    dependencies {
        compile "org.scala-lang:scala-library:$scalaVersion"
        compile "org.apache.curator:curator-framework:2.11.0"
        compile "com.typesafe:config:1.3.0"
        testCompile 'junit:junit:4.12'
    }

    group = 'com.github.zjiajun'
    version = 1.0

    tasks.withType(ScalaCompile) {
        scalaCompileOptions.additionalParameters = [
                "-encoding", "utf-8",
                "-unchecked"
        ]

        configure(scalaCompileOptions.forkOptions) {
            memoryMaximumSize = '1g'
            jvmArgs = ['-Xss2m', '-XX:MaxPermSize=512m']
        }
    }
}

project(':kafka0.8.2.2') {
    archivesBaseName = "kafka0.8.2.2"
    jar {
        baseName = 'kafka-sandbox-0.8.2.2'
    }
    dependencies {
//        compile "org.apache.kafka:kafka_$scalaLibVersion:0.8.2.2"
    }
}

project(':kafka0.10.1.0') {
    archivesBaseName = "kafka0.10.1.0"
    jar {
        baseName = 'kafka-sandbox-0.10.1.0'
    }
    dependencies {
//        compile "org.apache.kafka:kafka_$scalaLibVersion:0.10.1.0"
//        compile "org.apache.kafka:kafka-streams:0.10.1.0"
//        compile "commons-io:commons-io:2.5"
//        compile "org.apache.commons:commons-lang3:3.5"
    }
}

project(':kafka2.8') {
    archivesBaseName = "kafka2.8"
    jar {
        baseName = 'kafka-sandbox-2.8'
    }
    dependencies {
        compile "org.apache.kafka:kafka-clients:2.8.0"
        compile "org.apache.logging.log4j:log4j-core:2.14.0"
        compile "org.slf4j:slf4j-log4j12:1.7.31"
    }
}

ScalaCompileOptions.metaClass.daemonServer = true
ScalaCompileOptions.metaClass.fork = true
ScalaCompileOptions.metaClass.useAnt = true
ScalaCompileOptions.metaClass.useCompileDaemon = false
